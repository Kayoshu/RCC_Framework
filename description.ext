respawn = 3; // Type de respawn BASE, obligatoire pour le système de tickets
// Important de mettre au minimum 1 point de respawn "debug", soit un module Eden, soit un marker avec la side: respawn_west, respawn_east, respawn_guerrila, respawn_civilian

respawnOnStart = 0; // 0: Pas de respawn au start, chaque joueur arrive dans son slot, moins de bug de collisions
respawnDelay = 20; // Delai de respawn
respawnTemplates[] = {"Tickets","MenuPosition"}; // Templates: Retirer les tickets à la mort et Choix du point de spawn

// Mission parameters at lobby (nombre des vies)
//
class Params
{
	class plylives
	{
		title = "Lives";
		texts[] = {"1 vie","3 vies","5 vies","10 vies","100 vies"};
		values[] = {1,3,5,10,100};
		default = 3;
	};
	class unlimlives
	{
		title = "Lives Unlimited";
		texts[] = {"NO","YES"};
		values[] = {0,1};
		default = 0;
	};
	class missionsafestart
	{
		title = "Mission in Safestart";
		texts[] = {"NO","YES"};
		values[] = {0,1};
		default = 0;
	};
};

class Extended_PreInit_EventHandlers
{
	class RCC_CBA_keybinds {init = "call compile preProcessFileLineNumbers 'functions\CBAKeys.sqf'";};
	class RCC_CBA_settings {init = "call compile preprocessFileLineNumbers 'functions\CBASettings.sqf'";};
};

class cfgFunctions {
	#include "functions\RCC_fnc.hpp"
};